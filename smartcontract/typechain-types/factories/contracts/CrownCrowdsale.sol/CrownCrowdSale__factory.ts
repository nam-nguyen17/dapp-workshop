/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CrownCrowdSale,
  CrownCrowdSaleInterface,
} from "../../../contracts/CrownCrowdsale.sol/CrownCrowdSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bnb_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdt_rate",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "icotoken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BuyTokenByBNB",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BuyTokenByUSDT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "SetBNBRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "SetUSDTRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "SetUSDTToken",
    type: "event",
  },
  {
    inputs: [],
    name: "BNB_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyTokenByBNB",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "USDTAmount",
        type: "uint256",
      },
    ],
    name: "buyTokenByUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "BNBAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmountBNB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "USDTAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmountUSDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "new_rate",
        type: "uint256",
      },
    ],
    name: "setBNBRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "new_rate",
        type: "uint256",
      },
    ],
    name: "setUSDTRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_address",
        type: "address",
      },
    ],
    name: "setUSDTToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdtToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawErc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002093380380620020938339818101604052810190620000379190620002bb565b620000576200004b620000f160201b60201c565b620000f960201b60201c565b836002819055508260038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200032d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b620001d781620001c2565b8114620001e357600080fd5b50565b600081519050620001f781620001cc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022a82620001fd565b9050919050565b6200023c816200021d565b81146200024857600080fd5b50565b6000815190506200025c8162000231565b92915050565b60006200026f82620001fd565b9050919050565b6000620002838262000262565b9050919050565b620002958162000276565b8114620002a157600080fd5b50565b600081519050620002b5816200028a565b92915050565b60008060008060808587031215620002d857620002d7620001bd565b5b6000620002e887828801620001e6565b9450506020620002fb87828801620001e6565b93505060406200030e878288016200024b565b92505060606200032187828801620002a4565b91505092959194509250565b611d56806200033d6000396000f3fe6080604052600436106100fe5760003560e01c8063610757e411610095578063a98ad46c11610064578063a98ad46c146102b6578063acb03d43146102e1578063c5d156511461031e578063f2fde38b14610347578063fc0c546a14610370576100fe565b8063610757e41461022057806366e226bd1461024b578063715018a6146102745780638da5cb5b1461028b576100fe565b806331927737116100d157806331927737146101bd5780633ccfd60b146101c75780633e3f2359146101de578063592a00e4146101f5576100fe565b8063157fc821146101035780631832d8b61461012e5780631b4622d61461016b5780632be8629914610194575b600080fd5b34801561010f57600080fd5b5061011861039b565b60405161012591906114c2565b60405180910390f35b34801561013a57600080fd5b506101556004803603810190610150919061150e565b6103a1565b60405161016291906114c2565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d919061150e565b6103b8565b005b3480156101a057600080fd5b506101bb60048036038101906101b6919061150e565b610475565b005b6101c5610532565b005b3480156101d357600080fd5b506101dc6107a1565b005b3480156101ea57600080fd5b506101f3610866565b005b34801561020157600080fd5b5061020a610a3e565b60405161021791906114c2565b60405180910390f35b34801561022c57600080fd5b50610235610a44565b604051610242919061157c565b60405180910390f35b34801561025757600080fd5b50610272600480360381019061026d91906115e7565b610a6a565b005b34801561028057600080fd5b50610289610b61565b005b34801561029757600080fd5b506102a0610be9565b6040516102ad9190611623565b60405180910390f35b3480156102c257600080fd5b506102cb610c12565b6040516102d8919061169d565b60405180910390f35b3480156102ed57600080fd5b506103086004803603810190610303919061150e565b610c38565b60405161031591906114c2565b60405180910390f35b34801561032a57600080fd5b506103456004803603810190610340919061150e565b610c4f565b005b34801561035357600080fd5b5061036e600480360381019061036991906116e4565b610f33565b005b34801561037c57600080fd5b5061038561102b565b604051610392919061169d565b60405180910390f35b60025481565b6000600354826103b19190611740565b9050919050565b6103c0611051565b73ffffffffffffffffffffffffffffffffffffffff166103de610be9565b73ffffffffffffffffffffffffffffffffffffffff1614610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b906117f7565b60405180910390fd5b806003819055507fbdaa37e3f6679857d8c3e80d172bd45af732a8658cf1d690c81ca96f5a443b5b8160405161046a91906114c2565b60405180910390a150565b61047d611051565b73ffffffffffffffffffffffffffffffffffffffff1661049b610be9565b73ffffffffffffffffffffffffffffffffffffffff16146104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e8906117f7565b60405180910390fd5b806002819055507fb0cc740bbbfcd5af22ee3956c6b44d2d6f499e2a86cb11d915fcce88dca2113a8160405161052791906114c2565b60405180910390a150565b6000349050600061054282610c38565b905060008111610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057e90611863565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105e39190611623565b60206040518083038186803b1580156105fb57600080fd5b505afa15801561060f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106339190611898565b1015610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90611911565b60405180910390fd5b813373ffffffffffffffffffffffffffffffffffffffff163110156106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c590611911565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610736573d6000803e3d6000fd5b50610764600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383611059565b7ff695091b71a5c3ea41510251da89a66470bbcf1ee118f820a1bab8739e29ea503382604051610795929190611931565b60405180910390a15050565b6107a9611051565b73ffffffffffffffffffffffffffffffffffffffff166107c7610be9565b73ffffffffffffffffffffffffffffffffffffffff161461081d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610814906117f7565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610863573d6000803e3d6000fd5b50565b61086e611051565b73ffffffffffffffffffffffffffffffffffffffff1661088c610be9565b73ffffffffffffffffffffffffffffffffffffffff16146108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d9906117f7565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161097c9190611623565b60206040518083038186803b15801561099457600080fd5b505afa1580156109a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cc9190611898565b6040518363ffffffff1660e01b81526004016109e9929190611931565b602060405180830381600087803b158015610a0357600080fd5b505af1158015610a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3b9190611992565b50565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a72611051565b73ffffffffffffffffffffffffffffffffffffffff16610a90610be9565b73ffffffffffffffffffffffffffffffffffffffff1614610ae6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610add906117f7565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f43036333e58a6f9255617b54ec9f5825590c8ee695a222dc35e5001927f0715181604051610b56919061169d565b60405180910390a150565b610b69611051565b73ffffffffffffffffffffffffffffffffffffffff16610b87610be9565b73ffffffffffffffffffffffffffffffffffffffff1614610bdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd4906117f7565b60405180910390fd5b610be760006110df565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060025482610c489190611740565b9050919050565b6000610c5a826103a1565b905060008111610c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9690611863565b60405180910390fd5b81600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610cfb9190611623565b60206040518083038186803b158015610d1357600080fd5b505afa158015610d27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4b9190611898565b1015610d8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8390611911565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610de89190611623565b60206040518083038186803b158015610e0057600080fd5b505afa158015610e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e389190611898565b1015610e79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7090611911565b60405180910390fd5b610ec9600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856111a3565b610ef6600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383611059565b7f5c0161fad3fa89cfebd4a74115d9f81661cdd1b9008d05a238ea9d65088e20643382604051610f27929190611931565b60405180910390a15050565b610f3b611051565b73ffffffffffffffffffffffffffffffffffffffff16610f59610be9565b73ffffffffffffffffffffffffffffffffffffffff1614610faf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa6906117f7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561101f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101690611a31565b60405180910390fd5b611028816110df565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6110da8363a9059cbb60e01b8484604051602401611078929190611931565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061122c565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611226846323b872dd60e01b8585856040516024016111c493929190611a51565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061122c565b50505050565b600061128e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166112f39092919063ffffffff16565b90506000815111156112ee57808060200190518101906112ae9190611992565b6112ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e490611afa565b60405180910390fd5b5b505050565b6060611302848460008561130b565b90509392505050565b606082471015611350576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134790611b8c565b60405180910390fd5b6113598561141f565b611398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138f90611bf8565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516113c19190611c92565b60006040518083038185875af1925050503d80600081146113fe576040519150601f19603f3d011682016040523d82523d6000602084013e611403565b606091505b5091509150611413828286611442565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611452578290506114a2565b6000835111156114655782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114999190611cfe565b60405180910390fd5b9392505050565b6000819050919050565b6114bc816114a9565b82525050565b60006020820190506114d760008301846114b3565b92915050565b600080fd5b6114eb816114a9565b81146114f657600080fd5b50565b600081359050611508816114e2565b92915050565b600060208284031215611524576115236114dd565b5b6000611532848285016114f9565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115668261153b565b9050919050565b6115768161155b565b82525050565b6000602082019050611591600083018461156d565b92915050565b60006115a28261153b565b9050919050565b60006115b482611597565b9050919050565b6115c4816115a9565b81146115cf57600080fd5b50565b6000813590506115e1816115bb565b92915050565b6000602082840312156115fd576115fc6114dd565b5b600061160b848285016115d2565b91505092915050565b61161d81611597565b82525050565b60006020820190506116386000830184611614565b92915050565b6000819050919050565b600061166361165e6116598461153b565b61163e565b61153b565b9050919050565b600061167582611648565b9050919050565b60006116878261166a565b9050919050565b6116978161167c565b82525050565b60006020820190506116b2600083018461168e565b92915050565b6116c181611597565b81146116cc57600080fd5b50565b6000813590506116de816116b8565b92915050565b6000602082840312156116fa576116f96114dd565b5b6000611708848285016116cf565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061174b826114a9565b9150611756836114a9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561178f5761178e611711565b5b828202905092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006117e160208361179a565b91506117ec826117ab565b602082019050919050565b60006020820190508181036000830152611810816117d4565b9050919050565b7f416d6f756e74206973207a65726f000000000000000000000000000000000000600082015250565b600061184d600e8361179a565b915061185882611817565b602082019050919050565b6000602082019050818103600083015261187c81611840565b9050919050565b600081519050611892816114e2565b92915050565b6000602082840312156118ae576118ad6114dd565b5b60006118bc84828501611883565b91505092915050565b7f496e73756666696369656e74206163636f756e742062616c616e636500000000600082015250565b60006118fb601c8361179a565b9150611906826118c5565b602082019050919050565b6000602082019050818103600083015261192a816118ee565b9050919050565b60006040820190506119466000830185611614565b61195360208301846114b3565b9392505050565b60008115159050919050565b61196f8161195a565b811461197a57600080fd5b50565b60008151905061198c81611966565b92915050565b6000602082840312156119a8576119a76114dd565b5b60006119b68482850161197d565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a1b60268361179a565b9150611a26826119bf565b604082019050919050565b60006020820190508181036000830152611a4a81611a0e565b9050919050565b6000606082019050611a666000830186611614565b611a736020830185611614565b611a8060408301846114b3565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611ae4602a8361179a565b9150611aef82611a88565b604082019050919050565b60006020820190508181036000830152611b1381611ad7565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611b7660268361179a565b9150611b8182611b1a565b604082019050919050565b60006020820190508181036000830152611ba581611b69565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611be2601d8361179a565b9150611bed82611bac565b602082019050919050565b60006020820190508181036000830152611c1181611bd5565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611c4c578082015181840152602081019050611c31565b83811115611c5b576000848401525b50505050565b6000611c6c82611c18565b611c768185611c23565b9350611c86818560208601611c2e565b80840191505092915050565b6000611c9e8284611c61565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611cd082611ca9565b611cda818561179a565b9350611cea818560208601611c2e565b611cf381611cb4565b840191505092915050565b60006020820190508181036000830152611d188184611cc5565b90509291505056fea264697066735822122076c8d928e32468600d642d77c9beca6838ac215ee8888d08be78cfaadb1fec1364736f6c63430008090033";

type CrownCrowdSaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrownCrowdSaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrownCrowdSale__factory extends ContractFactory {
  constructor(...args: CrownCrowdSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bnb_rate: PromiseOrValue<BigNumberish>,
    usdt_rate: PromiseOrValue<BigNumberish>,
    wallet: PromiseOrValue<string>,
    icotoken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrownCrowdSale> {
    return super.deploy(
      bnb_rate,
      usdt_rate,
      wallet,
      icotoken,
      overrides || {}
    ) as Promise<CrownCrowdSale>;
  }
  override getDeployTransaction(
    bnb_rate: PromiseOrValue<BigNumberish>,
    usdt_rate: PromiseOrValue<BigNumberish>,
    wallet: PromiseOrValue<string>,
    icotoken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bnb_rate,
      usdt_rate,
      wallet,
      icotoken,
      overrides || {}
    );
  }
  override attach(address: string): CrownCrowdSale {
    return super.attach(address) as CrownCrowdSale;
  }
  override connect(signer: Signer): CrownCrowdSale__factory {
    return super.connect(signer) as CrownCrowdSale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrownCrowdSaleInterface {
    return new utils.Interface(_abi) as CrownCrowdSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrownCrowdSale {
    return new Contract(address, _abi, signerOrProvider) as CrownCrowdSale;
  }
}
